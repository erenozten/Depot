Statik Tipli Diller İle Dinamik Tipli Diller Arasındaki Farklar 	(edited,ekle) (Read)
Statik tipli dil nedir, statik tipli diller nedir, statik dil nedir
Programlama dillerinde yapılan her işlem öncesi hataları önlemek için verilerin tip kontrolü yapılır. Bu tür kontrollere ”Checking”  adı verilir. Checking işlemleri compile-time (derleme esnasında) veya run-time (çalışma esnasında) olarak yapılır. 

İşte bu farklılık Statik Tipli ve Dinamik Tipli dillerin temel ayrım noktalarından biridir.

Statik Tipli dillerde her değişkenin değişmez bir tipi olmak zorundadır. Uygulama geliştirenler ya bu tipi bizzat belirler yada Derleyici tarafından belirlenir. 

Statik Tipli dillerde yapılan işlemlerden önce Tip Konrolü yapıldığı için, operandların tiplerinin belirlenmesi gerekir. Tip kontrolleri compile (derleme) esnasında yapılır. 
Bu tarz dillere örnek olarak Java, C, C++ ,C# ,F# ,Ada ,Fortran ,Haskell ,ML ,Objective-C ,Pascal dilleri verilebilir. 

Bu tarz dillere örnek olarak Groovy, Javascript, Lisp, Lua, PHP, Prolog, Python, Ruby, Smalltalk dilleri verilebilir.

Statik Tipli Diller ile Dinamik Tipli dillerin birbirlerine üstünlükleri konusunda birçok fikir ortaya atılıyor. İkisinin de birbirlerine üstün oldukları noktalar var.

Statik Tipli dillerde derleme (compile-time) esnasında tip kontrolü yapıldığı için programın çalışması esnasında ekstra tip kontrolü yapılmaz, bu da uygulamanın çok daha verimli ve hızlı çalışması anlamına gelir. 
iiiiiii
Dinamik Tipli dillerde ise çalışma (run-time) esnasında kontrol yapılması ufak da olsa bir yavaşlamaya sebep olmaktadır. Ayrıca yine bu özellikten dolayı her değişkenin tip bilgisi hafızada saklanmak zorundadır. Bu durum ekstra bir hafıza yükü anlamına gelir. Statik Tipli dillerde derleme (compile-time) esnasında tip kontrolü yapıldığı için ekstra bir hafızaya gerek duyulmaz.
-
On-premises Software  	(GITHUB)
on premises software nedir, on-premises software nedir, on premise software nedir, on premise nedir
-Şirket içi yazılımlar, sunucu çiftliği veya bulut gibi uzak bir tesise değil, yazılımı kullanan kişi veya kuruluşun tesislerine yüklenir ve bilgisayarlarda çalışır.
Bildiğin "yerel" yani.


