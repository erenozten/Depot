2021 - REPETITION!
-
-
-
-
-
-
To make sure that database connections are properly closed and the resources they hold freed up, you have to dispose the context instance when you are done with it. That is why the scaffolded code provides a Dispose method at the end of the StudentController class in StudentController.cs, as shown in the following example: 
protected override void Dispose(bool disposing)
{
    db.Dispose();
    base.Dispose(disposing);
}

If you don't specify a connection string or the name of one explicitly, Entity Framework assumes that the connection string name is the same as the class name. The default connection string name in this example would then be SchoolContext, the same as what you're specifying explicitly.
The name of the connection string (which you'll add to the Web.config file later) is passed in to the constructor.
public SchoolContext() : base("SchoolContext")
{
}
-
-
-
-
-
-
BOŞ		(bosch)	 (bosch)
ne nedir
[HttpPost]
[ValidateAntiForgeryToken]
public ActionResult Delete(int id)
{
    try
    {
        Student student = db.Students.Find(id);
        db.Students.Remove(student);
        db.SaveChanges();
    }
    catch (DataException/* dex */)
    {
        //Log the error (uncomment dex variable name and add a line here to write a log.
        return RedirectToAction("Delete", new { id = id, saveChangesError = true });
    }
    return RedirectToAction("Index");
}
This code retrieves the selected entity, then calls the Remove method to set the entity's status to Deleted. When SaveChanges is called, a SQL DELETE command is generated. You have also changed the action method name from DeleteConfirmed to Delete. The scaffolded code named the HttpPost Delete method DeleteConfirmed to give the HttpPost method a unique signature. (The CLR requires overloaded methods to have different method parameters.) Now that the signatures are unique, you can stick with the MVC convention and use the same name for the HttpPost and HttpGet delete methods.
If improving performance in a high-volume application is a priority, you could avoid an unnecessary SQL query to retrieve the row by replacing the lines of code that call the Find and Remove methods with the following code:
C#Copy
Student studentToDelete = new Student() { ID = id };
db.Entry(studentToDelete).State = EntityState.Deleted;
This code instantiates a Student entity using only the primary key value and then sets the entity state to Deleted. That's all that the Entity Framework needs in order to delete the entity.
-
-
-
A query string is the portion of a URL where data is passed to a web application and/or back-end database. The reason we need query strings is that the HTTP protocol is stateless by design. For a website to be anything more than a brochure, you need to maintain state (store data). 
There are a number of ways to do this: On most web servers, you can use something like session state server-side. On the client, you can store via cookies. Or in the URL, you can store data via a query string. 

On the world wide web, all URLs can be broken down into the protocol, the location of the file (or program) and the query string. The protocol you see in a browser is almost always HTTP; the location is the typical form of the hostname and filename (for example, www.techopedia.com/somefile.html), and the query string is whatever follows the question mark sign ("?").
For example, in the URL below, the bolded area is the query string that was generated when the term "database" was searched on the Techopedia website.
//www.techopedia.com
-
-
-
-
-
-
HTTPPost method hides information from URL and does not bind data to URL. It is more secure than HttpGet method but it is slower than HttpGet. It is only useful when you are passing sensitive information to the server.
-
-
-
-
-
-
A static class can contain only the static members while a non-static class can contain static members. Static classes are by-default sealed so they cannot be inherited.
-
-
-
-
-
-
MVC, server-side bir sistemdir. Server-side sistemlerde end-user sadece html-javascript i görebilir. Csharp koduna erişemez.
Mvc bir UI-centric bir sistem değil; Server side’dır. 
-
-
-
-
-
Önemli repository bilgi:
You could instantiate a new context in the repository, but then if you used multiple repositories in one controller, each would end up with a separate context. Later you'll use multiple repositories in the Course controller, and you'll see how a unit of work class can ensure that all repositories use the same context.
-
-
-
-
-
-
Kısayollar / Keyboard Shortcuts	(GITHUB) (asasas)
Kısayol nedir, shortcut nedir
-
f2 - değişkene yeni isim ver (sistemdeki hepsinin)
ctrl alt f9  - breakpoint’e götürüyo seni

Ctrl  backspace    kelimeyi siliyo tamamen sola doğru
Ctrl  delete kelimeyi olduğu gibi siliyor. Sağa doğru siliyor. // ctrl + backspace de sola  doğru siliyor

ctrl + shift + nokta -> aynı değişkenlerin tümünü aynı anda editleme imkanı sağlıyor. (bende çalışmıyo)

-
Chrome offers “F5” key and the “Ctrl+R” key combination are used to reload the currently open Web page. 
Chrome also offers the reload shortcut combinations of “Ctrl + F5” and “Ctrl + Shift + R” to reload the currently open page and override the locally cached version.
Having cursor in the address field and pressing ENTER will also do the same as CTRL + F5
-Home, end (numpad’dakiler) : satırın başına ve sonuna gider. (shift ile de kullanılır, yazıyı seçmek için...)

-Klavyenin üstündeki normal home end tuşları: sayfanın başına ve sonuna gider.

-Numpad’daki home end tuşları ctrl ile kullanıldığında, tıpkı klavyenin üstündeki home-end tuşları gibi çalışıyor. Yani klavyenin üstündeki home-end tuşlarını kullanmaya gerek yok gibi görünüyor.

-Ctrl – yön tuşları  kelimenin başına sonuna gidiyor atlayarak.

-Next Error (F2) (çalışmadı)

-Previous error (Shift + F2) ) (çalışmadı)

-Expand Selection (Ctrl + W)

-Ctrl + n  search everywhere (acayip bişey) / create new file

- alt + yukarı aşağı arrows  iki satırın yerini birbiri arasında değiştirme.

- shift + alt  veya sadece alt-> kare alan seçme (çoklu satır)

-
Don’t use anything in the cache when making the request. Forces the browser to re-download every JavaScript file, image, text file, etc.

Empty Cache and Hard Reload
Empty Cache and hard reload = Empty the cache and Force the browser do re-download every JavaScript file, image, text file, etc.
Chrome kısayol: 
Crtl+F5 or Shift+F5 -> re-download cached content (i.e. JavaScript files, images, etc…)
Normal Reload
F5 or Control + R = Reload the current page
“Ctrl+R” is the same thing as pressing f5. This will use the cache in every way possible. If the browser can avoid re-downloading JavaScript files, images, text files, etc. then it will.
Note: Having cursor in the address field and pressing ENTER will also do the same as CTRL + F5
Hard reload / Force Refresh
Control + Shift + R or Control + F5 or Shift + F5 = ignoring cached content
Obviously if the cache is empty then it will have to do a hard reload in order to load the required/support files again. This will again force the browser to re-download everything. However, if the page makes any after the fact downloads via JavaScript that weren’t part of page load, then these might still use the cache, which is where emptying the cache helps because it makes sure that even these won’t use cached files.

RESHARPER:

Ctrl + T

-

Step over code to skip functions
When you are on a line of code that is a function or method call, you can press F10(Debug > Step Over) instead of F11.


Advance the debugger out of the current function
Sometimes, you might want to continue your debugging session but advance the debugger all the way through the current function.
Press Shift + F11 (or Debug > Step Out).
This command resumes app execution (and advances the debugger) until the current function returns.
-
F10 vs F11
https://stackoverflow.com/questions/15584132/what-is-the-difference-between-f10-and-f11-keys-in-visual-studio/39843982
F10 ("step over") does not descend any further into the call stack. It moves to the next line of the current function.
F11 ("step into") drills down into the function being called.
void function1()
{
    function2();
    function3();
}
If you hit a breakpoint on function2(), F10 will advance to the line function3(). F11 will advance to the first line inside function2.
-

CHROME
CTRL + SHIFT + C --> konsolu açmadan (ters tıklayıp incele demeden) mause'un üstünde olduğu elementi seçiyor. Muhteşem.

RESHARPER
alt FL   SAVE

ALT WL    QUIT ALL

ctrl D	  copy paste

ctrl tab   açık dosyalar arası geçiş 
ismin adının üstüne gelip F2 -> ismi değiştirmek için (projenin tümünde her yerde değiştirmek için)

ctrl shift r  bir class'ı yeni bir folder'a taşı

ctrl W kopyalıyor bi üst element/metoda kadar. (geri almak için: ctrl shift W)

alt aşağı / yukarı   metodlar arası geçiş

ctrl B  class definition'una gitme (ctrl click ile aynı)


windows+ sağ yön tuşu (visual studio’yu ekranın sağına yapıştırıyor. Google chrome’u açıp sola bas, onu da sola yapıştır.

f3    search yapılan text'i ara (diğer satırlarda)

ctrl alt J     kelimeyi <tag> ile çevreleme

ctrl f12    sayfa içinde text ara

ctrl shift R   model'imizi farklı bir klasöre taşımak istiyorsak. (namespace'i de değiştiriyor, kolaylık sağlıyor)

windows + sağ sol yukarı yön tuşları: progrmı büyütme yana yatırma 

ctrl tab   sekmeler arası geçiş

ctrl r     kullanma. F5 ile aynı. Eğer tam refresh yapmak istiyorsan ctrl shift f5 yap.

alt enter (en alttaki seçenekten: sayfadaki aynı textlerin tümünü değiştirme)
-
ctrl f10 - cursor'ın olduğu yere kadar projeyi çalıştırır. Break point koymuşsun gibi.
-
-
HARD RELOAD – NORMAL RELOAD nedir
Normal reload
The same thing as pressing F5. This will use the cache but revalidate everything during page load, looking for "304 Not Modified" responses. If the browser can avoid re-downloading cached JavaScript files, images, text files, etc. then it will.
________________________________________
Hard reload
Don't use anything in the cache when making the request. (which is equal to SHIFT+F5 No need to open Developer console) Force the browser do re-download every JavaScript file, image, text file, etc.


Hard reload / Force Refresh
Control + Shift + R or Control + F5 or Shift + F5 = ignoring cached content
Obviously if the cache is empty then it will have to do a hard reload in order to load the required/support files again. This will again force the browser to re-download everything. However, if the page makes any after the fact downloads via JavaScript that weren’t part of page load, then these might still use the cache, which is where emptying the cache helps because it makes sure that even these won’t use cached files.
RESHARPER:

Ctrl + T

-

Step over code to skip functions
When you are on a line of code that is a function or method call, you can press F10(Debug > Step Over) instead of F11.


Advance the debugger out of the current function
Sometimes, you might want to continue your debugging session but advance the debugger all the way through the current function.
Press Shift + F11 (or Debug > Step Out).
This command resumes app execution (and advances the debugger) until the current function returns.
-
F10 vs F11
https://stackoverflow.com/questions/15584132/what-is-the-difference-between-f10-and-f11-keys-in-visual-studio/39843982
F10 ("step over") does not descend any further into the call stack. It moves to the next line of the current function.
F11 ("step into") drills down into the function being called.
void function1()
{
    function2();
    function3();
}
If you hit a breakpoint on function2(), F10 will advance to the line function3(). F11 will advance to the first line inside function2.
-

CHROME
CTRL + SHIFT + C --> konsolu açmadan (ters tıklayıp incele demeden) mause'un üstünde olduğu elementi seçiyor. Muhteşem.

RESHARPER
alt FL   SAVE

ALT WL    QUIT ALL

ctrl D	  copy paste

ctrl tab   açık dosyalar arası geçiş 
ismin adının üstüne gelip F2 -> ismi değiştirmek için (projenin tümünde her yerde değiştirmek için)

ctrl shift r  bir class'ı yeni bir folder'a taşı

ctrl W kopyalıyor bi üst element/metoda kadar. (geri almak için: ctrl shift W)

alt aşağı / yukarı   metodlar arası geçiş

ctrl B  class definition'una gitme (ctrl click ile aynı)


windows+ sağ yön tuşu (visual studio’yu ekranın sağına yapıştırıyor. Google chrome’u açıp sola bas, onu da sola yapıştır.

f3    search yapılan text'i ara (diğer satırlarda)

ctrl alt J     kelimeyi <tag> ile çevreleme

ctrl f12    sayfa içinde text ara

ctrl shift R   model'imizi farklı bir klasöre taşımak istiyorsak. (namespace'i de değiştiriyor, kolaylık sağlıyor)

windows + sağ sol yukarı yön tuşları: progrmı büyütme yana yatırma 

ctrl tab   sekmeler arası geçiş

ctrl r     kullanma. F5 ile aynı. Eğer tam refresh yapmak istiyorsan ctrl shift f5 yap.

alt enter (en alttaki seçenekten: sayfadaki aynı textlerin tümünü değiştirme)
-
ctrl f10 - cursor'ın olduğu yere kadar projeyi çalıştırır. Break point koymuşsun gibi.

-
-
-
-
-
Bildirim için aşağıdaki yapıyı kullandık.
 
Bildirim için inheritance da kullanılabilirdi. Ama mantıklı olmazdı. O yüzden yukarıdaki gibi yaptık. Aşağıdaki gibi YAPMADIK.
Mosh hamedani: Her halta inheritance uygulama. İnheritance şu durumlarda kullanılır: polimorfizm gerekiyorsa, ortada "behavior" varsa. Bunlar yoksa inheritance falan uygulama. Çünkü gereksiz olur. Boşuna complexity artırırsın. Kodun zorlaşır.
-
-
-
-
Integral to integral conversions
Integral conversions are implicit when the destination type can represent every possible
value of the source type. Otherwise, an explicit conversion is required. For
example:
int x = 12345; // int is a 32-bit integral
long y = x; // Implicit conversion to 64-bit integral
short z = (short)x; // Explicit conversion to 16-bit integral
A float can be implicitly converted to a double, since a double can represent every
possible value of a float. The reverse conversion must be explicit.
-
-
(okundu - github)
Remember, that an if can have zero or more else if's and they must come before the last else, which is optional.
Once an else if succeeds, none of the remaining else if's or else clause will be tested.
-
A do-while loop is similar to a while loop, except that a do-while loop is guaranteed to execute at least one time.
-
-
-
-
-



